# ARCらしい問題だなぁ……

# 任意の二点間の最短経路長ということで、ワーシャルフロイド法が思いつく。V^3で任意の二点間の最短経路長を求められる。
# 単純に「K個のグラフに対してワーシャルフロイドを実行する」と考えると、O(N^3 K)でTLEになる。
# グラフどうしの関係を考えて、更新式をうまく作ることで計算時間のオーダーを落としたい。
# for edge in 新たな道路：
#     distanse_sum = 0
#     for i in vertex:
#         for j in vertex:
#             i→jの距離 = min(i→jの距離、i→p→q→jの距離、i→q→p→jの距離) ただしp, qはedgeの両端でpq間は新しい道を通る
#             distanse_sum += i→jの距離
# 
# とすればよい。
# 1つの道を追加したときに、新規の道を通らないときの最短距離はそれまでのi→jの距離、
# 新規の道を通るときの最短距離はi→p→q→jの距離、i→q→p→jの距離の小さい方であるから、この更新式で求まる。
# 計算時間は0(N^3 + N^2 K)である。
# そのまま計算すると最大6400万+6400万=12800万だけど、間に合うのかこれは?
# 無向辺グラフだからvertex i, jの組み合わせは半分でいいから半分にはなるけど……
